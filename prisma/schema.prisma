generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects  Project[]
  donations Donation[]

  @@map("users")
}

model Project {
  id           String        @id @default(cuid())
  title        String
  description  String
  shortDesc    String
  category     String
  status       String        @default("ACTIVE")
  goalAmount   Float
  currentAmount Float        @default(0)
  featured     Boolean       @default(false)
  imageUrl     String?
  location     String?
  startDate    DateTime      @default(now())
  endDate      DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  creatorId    String
  creator      User          @relation(fields: [creatorId], references: [id])
  donations    Donation[]
  updates      ProjectUpdate[]

  @@map("projects")
}

model Donation {
  id              String        @id @default(cuid())
  amount          Float
  currency        String        @default("KES")
  donorName       String?
  donorEmail      String?
  message         String?
  anonymous       Boolean       @default(true)
  paymentStatus   String        @default("PENDING")
  paymentMethod   String        @default("MPESA")
  transactionId   String?       @unique
  receiptNumber   String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // M-Pesa specific fields
  mpesaCheckoutRequestId String?
  mpesaMerchantRequestId String?
  mpesaReceiptNumber     String?
  mpesaResponseCode      String?
  mpesaResultCode        String?
  mpesaResultDesc        String?
  mpesaTransactionDate   DateTime?
  completedAt            DateTime?
  failedAt               DateTime?

  projectId       String
  project         Project       @relation(fields: [projectId], references: [id])
  donorId         String?
  donor           User?         @relation(fields: [donorId], references: [id])

  @@map("donations")
}

model ProjectUpdate {
  id        String   @id @default(cuid())
  title     String
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())

  projectId String
  project   Project  @relation(fields: [projectId], references: [id])

  @@map("project_updates")
}



// Note: SQLite doesn't support enums, so we use strings with validation in the application layer
// Valid values for role: USER, ADMIN, PROJECT_CREATOR
// Valid values for category: EDUCATION, HEALTHCARE, ENVIRONMENT, COMMUNITY_DEVELOPMENT, EMERGENCY_RELIEF, TECHNOLOGY, ARTS_CULTURE, SPORTS
// Valid values for status: ACTIVE, COMPLETED, PAUSED, URGENT, DRAFT
// Valid values for paymentStatus: PENDING, COMPLETED, FAILED, CANCELLED, REFUNDED, TIMEOUT
